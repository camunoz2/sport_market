name: WhatsApp Notifications

on:
  push:
  pull_request:
    types: [opened, closed]
  issues:
    types: [opened, closed]
  issue_comment:
    types: [created]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug GitHub Event
        run: echo "Event name is ${{ github.event_name }}"

      - name: Extract Commit Details (if push)
        if: github.event_name == 'push'
        run: |
          echo "EVENT_TYPE=Commit" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV
          echo "COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')" >> $GITHUB_ENV

      - name: Extract PR Details (if PR)
        if: github.event_name == 'pull_request'
        run: |
          echo "EVENT_TYPE=Pull Request" >> $GITHUB_ENV
          echo "PR_TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_ENV
          echo "PR_AUTHOR=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
          echo "PR_ACTION=${{ github.event.action }}" >> $GITHUB_ENV

      - name: Extract Issue Details (if issue)
        if: github.event_name == 'issues'
        run: |
          echo "EVENT_TYPE=Issue" >> $GITHUB_ENV
          echo "ISSUE_TITLE=${{ github.event.issue.title }}" >> $GITHUB_ENV
          echo "ISSUE_AUTHOR=${{ github.event.issue.user.login }}" >> $GITHUB_ENV
          echo "ISSUE_ACTION=${{ github.event.action }}" >> $GITHUB_ENV

      - name: Extract Mentioned User from Comment (if issue comment)
        if: github.event_name == 'issue_comment'
        run: |
          COMMENT_BODY="${{ github.event.comment.body }}"
          MENTIONED_USER=$(echo "$COMMENT_BODY" | grep -o '@[a-zA-Z0-9_-]*' | head -n 1 | tr -d '@')
          echo "EVENT_TYPE=Mention" >> $GITHUB_ENV
          echo "COMMENT_AUTHOR=${{ github.event.comment.user.login }}" >> $GITHUB_ENV
          echo "MENTIONED_USER=$MENTIONED_USER" >> $GITHUB_ENV

      - name: Debug Environment Variables
        run: |
          echo "EVENT_TYPE=$EVENT_TYPE"
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE"
          echo "COMMIT_AUTHOR=$COMMIT_AUTHOR"
          echo "PR_TITLE=$PR_TITLE"
          echo "PR_AUTHOR=$PR_AUTHOR"
          echo "PR_ACTION=$PR_ACTION"
          echo "ISSUE_TITLE=$ISSUE_TITLE"
          echo "ISSUE_AUTHOR=$ISSUE_AUTHOR"
          echo "ISSUE_ACTION=$ISSUE_ACTION"
          echo "COMMENT_AUTHOR=$COMMENT_AUTHOR"
          echo "MENTIONED_USER=$MENTIONED_USER"
        env:
          EVENT_TYPE: ${{ env.EVENT_TYPE }}
          COMMIT_MESSAGE: ${{ env.COMMIT_MESSAGE }}
          COMMIT_AUTHOR: ${{ env.COMMIT_AUTHOR }}
          PR_TITLE: ${{ env.PR_TITLE }}
          PR_AUTHOR: ${{ env.PR_AUTHOR }}
          PR_ACTION: ${{ env.PR_ACTION }}
          ISSUE_TITLE: ${{ env.ISSUE_TITLE }}
          ISSUE_AUTHOR: ${{ env.ISSUE_AUTHOR }}
          ISSUE_ACTION: ${{ env.ISSUE_ACTION }}
          COMMENT_AUTHOR: ${{ env.COMMENT_AUTHOR }}
          MENTIONED_USER: ${{ env.MENTIONED_USER }}

      - name: Construct WhatsApp Message
        run: |
          MESSAGE="Unknown event"
          if [ "$EVENT_TYPE" = "Commit" ]; then
            MESSAGE="📌 *New Commit*|👤 Author: $COMMIT_AUTHOR|💬 Message: $COMMIT_MESSAGE"
          elif [ "$EVENT_TYPE" = "Pull Request" ]; then
            MESSAGE="🔀 *Pull Request*|👤 Author: $PR_AUTHOR|📄 Title: $PR_TITLE|📢 Action: $PR_ACTION"
          elif [ "$EVENT_TYPE" = "Issue" ]; then
            MESSAGE="🐛 *Issue*|👤 Author: $ISSUE_AUTHOR|📄 Title: $ISSUE_TITLE|📢 Action: $ISSUE_ACTION"
          elif [ "$EVENT_TYPE" = "Mention" ] && [ -n "$MENTIONED_USER" ]; then
            MESSAGE="📣 *Mention in Issue*|👤 $COMMENT_AUTHOR mentioned @$MENTIONED_USER in a comment."
          fi
          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV
          echo "Constructed MESSAGE: $MESSAGE"
        env:
          EVENT_TYPE: ${{ env.EVENT_TYPE }}
          COMMIT_MESSAGE: ${{ env.COMMIT_MESSAGE }}
          COMMIT_AUTHOR: ${{ env.COMMIT_AUTHOR }}
          PR_TITLE: ${{ env.PR_TITLE }}
          PR_AUTHOR: ${{ env.PR_AUTHOR }}
          PR_ACTION: ${{ env.PR_ACTION }}
          ISSUE_TITLE: ${{ env.ISSUE_TITLE }}
          ISSUE_AUTHOR: ${{ env.ISSUE_AUTHOR }}
          ISSUE_ACTION: ${{ env.ISSUE_ACTION }}
          COMMENT_AUTHOR: ${{ env.COMMENT_AUTHOR }}
          MENTIONED_USER: ${{ env.MENTIONED_USER }}

      - name: Debug Message Format
        run: |
          echo "Formatted Message: ${{ env.MESSAGE }}"

      - name: Send WhatsApp Notification to Multiple Numbers
        shell: bash
        run: |
          NUMBERS="${{ secrets.SANDBOX_NUMBERS }}"
          echo "Numbers: $NUMBERS"
          # Process numbers separated by comma and send the message to each
          echo "$NUMBERS" | tr ',' '\n' | while read -r NUMBER; do
            if [ -n "$NUMBER" ]; then
              echo "Sending message to $NUMBER..."
              curl -X POST "https://api.twilio.com/2010-04-01/Accounts/$TWILIO_ACCOUNT_SID/Messages.json" \
              --data-urlencode "To=whatsapp:$NUMBER" \
              --data-urlencode "From=whatsapp:$TWILIO_WHATSAPP_NUMBER" \
              --data-urlencode "Body=$MESSAGE" \
              -u "$TWILIO_ACCOUNT_SID:$TWILIO_AUTH_TOKEN"
            fi
          done
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_WHATSAPP_NUMBER: ${{ secrets.TWILIO_WHATSAPP_NUMBER }}
          SANDBOX_NUMBERS: ${{ secrets.SANDBOX_NUMBERS }}
          MESSAGE: ${{ env.MESSAGE }}
